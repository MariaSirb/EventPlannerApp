@page
@model EventPlannerApp.Pages.MyEvents.IndexModel

@{
    ViewData["Title"] = "Index";
}
<style>
    .event-message {
        position: absolute;
        background-color:#32262d;
        border: 1px solid black;
       
        display: none;

        top: 50%;
        left: 50%;
        
        padding: 20px;
       
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
    }
</style>
<div class="about-section mb-0 mt-0" style="background-color:#705565; opacity:0.8;">
    <h2 style="font-weight:bold; color:#cbbfc6"> - My events -  </h2>
    <img align="center" src="~/image/logo.png" alt="sigla" class="sigla1" />
</div>
<br />
<p>
    
    <button type="button" class="btn btn-outline-dark">
        <a class= asp-area ="" asp-page="Create">Add a new Event</a>
    </button> | |
    <button type="button" class="btn btn-outline-dark">
        <a class= asp-area ="" asp-page="Index" asp-route-showFavourite="@true">Show favourites</a>
    </button> | |
    <button type="button" class="btn btn-outline-dark">
        <a class= asp-area ="" asp-page="./Index">Back to List</a>
    </button>

</p>


<div class="row">
    @foreach (var item in Model.MyEventD.MyEvents)
    {
        <div class="card" style="color: #4b3943; background-color:#e5dfe2; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; opacity:0.6; " >
            <h5 style="text-align:center;">
                @Html.DisplayFor(modelItem => item.EventType.EventTypeName)
            </h5>

            <p>
                <label class="my-label">Start date: </label>
                @Html.DisplayFor(modelItem => item.StartDate)
            
            </p>
            
            <p>
                <label class="my-label">End date: </label>
                @Html.DisplayFor(modelItem => item.EndDate)
            </p>

            <p>
                <label class="my-label">Mention/ Preferances: </label>
                @Html.DisplayFor(modelItem => item.Mention)
            </p>
            <p>
                <label class="my-label">Location: </label>
                @Html.DisplayFor(modelItem => item.Location.LocationName)
            </p>
            <p>
                <label class="my-label">Dj: </label>
                @Html.DisplayFor(modelItem => item.Music.DjName)
            </p>
            <p>
                <label class="my-label">Photograph: </label>
                @Html.DisplayFor(modelItem => item.Photograph.PhotographName)

            </p>
            <p>
                <label class="my-label">Menu: </label>
               @* @Html.DisplayNameFor(model => model.MyEvent[0].MyEventMenues)*@
                @{
                    foreach (var menu in item.MyEventMenues)
                    { 
                        //@menu.Menu @:
                        @menu.Menu.ItemName <br />
                    }
                }

            </p>
            @if (User.IsInRole("Admin"))
            {
                <p>

                @Html.DisplayNameFor(model => model.MyEvent[0].Client)
                @Html.DisplayFor(modelItem => item.Client.FullName)

            </p>}

                 <div class="event-message">
                @if (item.EndDate < DateTime.Now)
                {
                    <span style="color:#d8cfd4">Status: <b>COMPLETED event</b></span>
                }
                else
                {
                    <span style="color:#d8cfd4">Status: <b>ONGOING event</b></span>
                }
                </div>


            <div>
            <a asp-page="./Edit" asp-route-id="@item.ID"><i class="bi bi-pencil-square fa-7x icon-yellow"></i></a> |
           @* <a asp-page="./Details" asp-route-id="@item.ID"><i class="bi bi-info-circle-fill fa-10x"></i></a> |*@
            <a asp-page="./Delete" asp-route-id="@item.ID"><i class="bi bi-trash icon-red fa-10x"></i></a> |
         </div>
        </div>
    }
</div>


<script>
    function toggleMessage(element) {
        var message = element.querySelector('.event-message');
        if (message.style.display === 'none') {
            message.style.display = 'block';
        } else {
            message.style.display = 'none';
        }
    }

    document.addEventListener('click', function (event) {
        var targetElement = event.target;
        var eventCard = targetElement.closest('.card');

        var messages = document.querySelectorAll('.event-message');
        messages.forEach(function (message) {
            message.style.display = 'none';
        });

        if (eventCard) {
            var message = eventCard.querySelector('.event-message');
            if (targetElement.classList.contains('card') || targetElement.parentElement.classList.contains('card')) {
                message.style.display = 'block';
            }
        }
    });
</script>


@*    Funcția toggleMessage este apelată atunci când se face clic pe un eveniment 
și inversează vizibilitatea mesajului corespunzător.*@

        @*Evenimentul 'click' este ascultat la nivelul întregului document,
        iar mesajele sunt ascunse când se face clic în afara evenimentelor. 
        Acest lucru este realizat verificând dacă elementul țintă (targetElement) al evenimentului nu se află în interiorul unui card de eveniment.*@